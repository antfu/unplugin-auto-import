// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transform fixtures comments.ts 1`] = `
"import { ref, computed } from 'vue';/* import { ref } from 'vue' */
// import { computed } from 'vue'

const a = {
  rel: \\"noreferrer\\",
  href: \\"https://github.com/antfu/vitesse\\",
  target: \\"_blank\\"
}

const foo = ref(0)
const bar = computed(() => {})

const b = { class: \\"text-sm opacity-75\\" };
// reactive
"
`;

exports[`transform fixtures custom.js 1`] = `
"import { default as customDefault, customNamed } from 'custom';const a = customDefault(customNamed())
"
`;

exports[`transform fixtures dollar.js 1`] = `
"import { $ } from 'vue-dollar';$('hi')
"
`;

exports[`transform fixtures existing.jsx 1`] = `
"import { watch } from 'vue';import ref from 'ref'
import { computed } from 'computed'

const a = ref(0)
const b = computed(0)

watch(a)
ignored(b)
"
`;

exports[`transform fixtures glob.ts 1`] = `
"import { ref } from 'vue';const modules = import.meta.glob(\\"/src/nested/*.vue\\");
const msg = ref(\\"Global Imports\\");
"
`;

exports[`transform fixtures non-target.js 1`] = `
"useNonTarget()
"
`;

exports[`transform fixtures props.ts 1`] = `
"import { toRefs } from 'vue';const a = z.ref(0)
console.log({
  ...toRefs(a)
})
"
`;

exports[`transform fixtures prototype.ts 1`] = `
"const a = Object.keys(b)
const c = a.toString()

"
`;

exports[`transform fixtures react.jsx 1`] = `
"import { useState } from 'react';export function Component() {
  const [count, setCount] = useState()

  return <div>{ count }</div>
}
"
`;

exports[`transform fixtures react-existing.jsx 1`] = `
"import React, { useState } from 'react';

export function Component() {
  const [count, setCount] = useState()

  return <div>{ count }</div>
}
"
`;

exports[`transform fixtures recursive.ts 1`] = `
"export const ref = (obj: any) => {
  return ref(1)
}
"
`;

exports[`transform fixtures resolver.ts 1`] = `
"import { default as customResolved1 } from 'custom/resolved/1';import { default as customResolved2, _customNamedResolved2 as customNamedResolved2 } from 'custom/resolved/2';const a = customResolved1(1)
const b = customResolved2(1)
const c = customNamedResolved2(1)
"
`;

exports[`transform fixtures strings.ts 1`] = `
"console.log(\\"ref(0)\\")
console.log(\`ref(\${a})\`)
console.log('ref(\\\\'z\\\\')')
console.log(\`
ref('z')
\`)
"
`;

exports[`transform fixtures svelte.svelte 1`] = `
"import { writable } from 'svelte/store';import { tweened } from 'svelte/motion';import { cubicOut, quintOut } from 'svelte/easing';import { onMount } from 'svelte';import { flip } from 'svelte/animate';import { fade } from 'svelte/transition';const list = writable([1, 2, 3])
const size = tweened(1, {
  duration: 300,
  easing: cubicOut
});
onMount(() => {})

{#each $list as n (n)}
<div animate:flip={{delay: 250, duration: 250, easing: quintOut}}>
  {n}
</div>
{/each}

{#if condition}
  <div transition:fade={{amount: 10}}>
    fades in and out
  </div>
{/if}
"
`;

exports[`transform fixtures vue.js 1`] = `
"import { useQuasar, useMeta } from 'quasar';import { ref } from 'vue';const q = useQuasar()
const meta = useMeta()
const a = ref(0)
"
`;
